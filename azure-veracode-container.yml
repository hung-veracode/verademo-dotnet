trigger:
- manual

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: CmdLine@2
  displayName: Veracode Container CLI
  inputs:
    script: |
      echo "Export credentials from Azure variables"
      export VERACODE_API_KEY_ID=$(VERACODE_API_ID)
      export VERACODE_API_KEY_SECRET=$(VERACODE_API_KEY)
      echo "Installing Veracode CLI"
      curl -fsS https://tools.veracode.com/veracode-cli/install | sh
      echo "Pull credentials from the exported credentials above"
      ./veracode configure
      echo "Scan containers alpine:latest and bitnami/moodle"
      ./veracode scan --source alpine:latest --type image --format json --output alpine_latest_scan.json

      export PASSFAIL=$(jq -r '."policy-passed"' veracode_container_scan.json)
      echo $PASSFAIL
      if [[ "$PASSFAIL" == "false" ]]; then
        echo "Container scan failed policy"
        exit 1
      fi
      
      ./veracode scan --source bitnami/moodle --type image --format json --output bitnami_moodle_scan.json
      echo "Scan repo verademo"
      ./veracode scan --source https://github.com/veracode/verademo --type repo --format json --output ./veracode_container_scan.json
      ./veracode sbom --source https://github.com/veracode/verademo --type repo --format json --output ./sbom.json

- task: PublishBuildArtifacts@1
  inputs:
    artifactName: 'alpine_latest_scan.json'
    pathToPublish: '$(System.DefaultWorkingDirectory)/alpine_latest_scan.json'
  displayName: 'Publish alpine_latest_scan.json Artifact'

- task: PublishBuildArtifacts@1
  inputs:
    artifactName: 'bitnami_moodle_scan.json'
    pathToPublish: '$(System.DefaultWorkingDirectory)/bitnami_moodle_scan.json'
  displayName: 'Publish bitnami_moodle_scan.json Artifact'

- task: PublishBuildArtifacts@1
  inputs:
    artifactName: 'sbom.json'
    pathToPublish: '$(System.DefaultWorkingDirectory)/sbom.json'
  displayName: 'Publish Veracode sbom.json Artifact'
