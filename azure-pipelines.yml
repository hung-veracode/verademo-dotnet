# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4
# This is an example of using VeraDemoDotNet test application with the Veracode Static Pipeline scanner.  A Veracode subscription is required.

trigger:
- main

resources:
  repositories:
    - repository: devops-scripts
      type: github
      name: hungqng/verademo-dotnet
      endpoint: hungqng

pool:
  vmImage: 'windows-latest'
  #vmImage: 'ubuntu-latest'

variables:
- group: 'Veracode Credentials'

stages:
- stage: Build

  jobs:
  - job: Build_Debug
    displayName: Debug Build

    steps:
    - template: steps/abstract-build-steps.yml@devops-scripts
      parameters:
        buildConfiguration: 'Debug'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: $(Build.StagingDirectory)
        artifactName: WebApp_Debug

- stage: Security_Testing
  jobs:       
  - job: SAST_Security_Testing
    displayName: Static Analysis Security Testing

    steps:
    - checkout: none
    - task: DownloadPipelineArtifact@2
      displayName: "Download Artifact"
      inputs:
        targetPath: $(Build.StagingDirectory)
        artifact: WebApp_Debug 
        
    - script: ls -la $(Agent.BuildDirectory)
    - script: ls -la $(Build.StagingDirectory)
      displayName: "Show Workspace Contents"
   
    - script: echo 'Prepare Veracode Pipeline SAST'
    - script: curl -sSO https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
      displayName: "Download Pipeline Scan"

    - script: unzip -o pipeline-scan-LATEST.zip
      displayName: "Unzip Pipeline Scan"

    - script: java -jar pipeline-scan.jar --version
      displayName: "Pipeline Scan Version" 
      
    - script: java -jar pipeline-scan.jar -vid $(VERACODE_API_ID) -vkey $(VERACODE_API_KEY) -f $(Build.StagingDirectory)\$(system.teamProject).zip || true
      displayName: "Running Analysis"
